<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C#随记</title>
    <url>/2019/11/25/C-Notes/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ul>
<li>写C#窗体程序的相关记录。本文仅仅是自己的一些见解和遇到的问题，<strong>并不完全正确！请注意！</strong> <h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="程序调试运行无反应"><a href="#程序调试运行无反应" class="headerlink" title="程序调试运行无反应"></a>程序调试运行无反应</h2></li>
<li>加载各个窗体时，有一个窗体初始化函数内，写了一个<strong>需要一直循环的函数</strong>。点击调试运行时，初始化函数一直在运行，所以界面加载不出来，看起来就毫无反应。</li>
<li><strong>解：</strong> 写了个线程，加载时打开线程，在线程中<code>while(true){...}</code>做需要一直做的事，就行了。<h1 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h1><h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2></li>
<li>Graphics绘图  </li>
<li><strong>优点：</strong> 全面：所有线条，字体等等都由自己选择。  </li>
<li><strong>缺点：</strong> 绘制动图有点费劲，<code>Graphics.Clear(60,255,255,255);</code>//Clear函数只能以指定颜色重绘画布Bitmap，参数1：透明度（可不写），参数234：三原色。<h3 id="控件Panel"><a href="#控件Panel" class="headerlink" title="控件Panel"></a>控件Panel</h3>&#8195;Panel外观：Backgroundimage，可以Panel.Backgroundimage=Bitmap加载图画。而且Panel.Paint事件可以在加载的背景上绘图。  </li>
</ul>]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>随记</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle语句</title>
    <url>/2019/11/22/oraclestate/</url>
    <content><![CDATA[<h1 id="基础语句"><a href="#基础语句" class="headerlink" title="基础语句"></a>基础语句</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>Oracle语句与SQL语句还是有很多不一样的地方。</li>
<li>都是些基础的，毕竟我也是业余的。</li>
</ul>]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>解数独</title>
    <url>/2019/11/22/shudu/</url>
    <content><![CDATA[<p>主要分享一下解数独的源代码，用到了比较重要的回溯算法！</p>
<a id="more"></a>
<center>程序界面</center> 

<div align="center"><img width="400" height="400" src="/2019/11/22/shudu/1.png"></div>  

<p>源代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">namespace shudu</span><br><span class="line">&#123;</span><br><span class="line">    public partial class form : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public form()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Form1_Load(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            data.ColumnCount = 9;</span><br><span class="line">            data.RowCount = 9;</span><br><span class="line">            for (int i = 0; i &lt; 9; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                data.Columns[i].Width = 41;</span><br><span class="line">                data.Rows[i].Height = 40;</span><br><span class="line">            &#125;</span><br><span class="line">            for (int i = 0; i &lt; 9; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for (int j = 0; j &lt; 9; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    data.Rows[i].Cells[j].Value = &quot;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void button1_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            for (int i = 0; i &lt; 9; i++)</span><br><span class="line">                for (int j = 0; j &lt; 9; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (data.Rows[i].Cells[j].Value.ToString() == &quot;&quot;)</span><br><span class="line">                        data.Rows[i].Cells[j].Value = &quot;.&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            solveSudoku();</span><br><span class="line">        &#125;</span><br><span class="line">        bool solved = false;</span><br><span class="line">        private void solveSudoku()</span><br><span class="line">        &#123;</span><br><span class="line">            recursive(0, 0);</span><br><span class="line">        &#125;</span><br><span class="line">        private void recursive(int row, int col)</span><br><span class="line">        &#123;</span><br><span class="line">            if (data.Rows[row].Cells[col].Value.ToString()==&quot;.&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                int i = 1;</span><br><span class="line">                for (; i &lt; 10; i++)</span><br><span class="line">                    if (TF(i, row, col))</span><br><span class="line">                    &#123;</span><br><span class="line">                        write(i, row, col);</span><br><span class="line">                        writenext(row, col);</span><br><span class="line">                        if (!solved) del( row, col);</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else writenext( row, col);</span><br><span class="line">        &#125;</span><br><span class="line">        private  bool TF( int num, int row, int col)</span><br><span class="line">        &#123;</span><br><span class="line">            int rowindex = row / 3, colindex = col / 3;</span><br><span class="line">            for (int i = 0; i &lt; 3; i++)</span><br><span class="line">                for (int j = 0; j &lt; 3; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (data.Rows[rowindex * 3 + i].Cells[colindex * 3 + j].Value.ToString() == num.ToString())</span><br><span class="line">                        return false;</span><br><span class="line">                &#125;</span><br><span class="line">            for (int i = 0; i &lt; 9; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (data.Rows[row].Cells[i].Value.ToString() == num.ToString() || data.Rows[i].Cells[col].Value.ToString() == num.ToString())</span><br><span class="line">                    return false;</span><br><span class="line">            &#125;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        private void write( int num, int row, int col)</span><br><span class="line">        &#123;</span><br><span class="line">            data.Rows[row].Cells[col].Value = num.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">        private  void writenext(int row, int col)</span><br><span class="line">        &#123;</span><br><span class="line">            if (row == 8 &amp;&amp; col == 8) solved = true;</span><br><span class="line">            else if (col &lt; 8) recursive(row, col + 1);</span><br><span class="line">            else if (row &lt; 8) recursive(row + 1, 0);</span><br><span class="line">        &#125;</span><br><span class="line">        private void del(int row, int col)</span><br><span class="line">        &#123;</span><br><span class="line">            data.Rows[row].Cells[col].Value = &quot;.&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void button2_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            solved = false;</span><br><span class="line">            for (int i = 0; i &lt; 9; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for (int j = 0; j &lt; 9; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    data.Rows[i].Cells[j].Value = &quot;&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序也放上来，大家可以下下来玩玩。<a href="shudu/shudu.exe/">点击下载</a></p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#窗体程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows指令</title>
    <url>/2019/11/20/runwindows/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul>
<li><p>本文主要关于Windows相关指令，<strong>Win+R</strong>打开输入框。输入以下指令即可打开不同功能。  </p>
<h1 id="环回网络"><a href="#环回网络" class="headerlink" title="环回网络"></a>环回网络</h1></li>
<li><p>hdwwiz  </p>
<h1 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h1></li>
<li><p>mstsc</p>
</li>
</ul>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>随记</tag>
      </tags>
  </entry>
  <entry>
    <title>ORA-01045</title>
    <url>/2019/11/20/ORA01045/</url>
    <content><![CDATA[<p><code>ORA-01045: user 某某用户 lacks CREATE SESSION privilege; logon denied</code><br><strong>权限问题</strong>：以system用户登录，运行以下指令。<br><code>grant create session,resource  to 某某用户；</code></p>]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>随记</tag>
      </tags>
  </entry>
  <entry>
    <title>ORA-00911</title>
    <url>/2019/11/20/ORA00911/</url>
    <content><![CDATA[<p>外部程序操作数据库，书写SQL语句，若如下：<br><code>insert into syw.tempdata(TEMP,TIME) values</code><br> <code>(200,to_date(&#39;2019/11/20 9:46:06&#39;,&#39;YYYY-MM-DD HH24:MI:SS&#39;));</code>   </p><a id="more"></a>
<p>会报错：ORA-00911<br>因为外部程序中书写SQL语句末尾不用加 <strong>“;”</strong> 号。</p>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>随记</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows窗体应用程序</title>
    <url>/2019/11/19/Sensorproject/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>&#8195;这是一个被写的尽量<strong>全面而浅显</strong>的<strong>完整的工程项目实例</strong>。<br>&#8195;<strong>语言：C#<br>&#8195;框架：Windows窗体应用程序<br>&#8195;通讯：串口通信（协议：Modbus）<br>&#8195;数据库：Oracle。</strong>    </p>
<a id="more"></a>
<p>&#8195;这个项目实现了与一个或多个自动化设备通信，自动的读取、修改设备的当前数据、状态，并将需要保存的数据放入Oracle数据库，可以按要求调出查看。</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&#8195;写一个完整的项目，不仅需要<strong>浅显易懂的变量名</strong>，而且需要<strong>非常清晰的错误文档</strong>。这两点非常非常重要！！！在写程序之前，有必要先讨论一下这两点。 </p>
<p>&#8195;1. 变量名<br>&#8195;举例：GetHexStrFrombytes(byte[] byteSource) {…}<br>&#8195;这个函数的作用是：将传入的字节数组转换成<strong>十六进制字符串</strong>（如：”0106A3C2FF002FE2”）。<br>&#8195;那么显而易见的：GetBytesFromHexStr(string strSource) {…}<br>&#8195;这个函数的作用就是：将传入的十六进制字符串转换为字节数组。<br>&#8195;每写一个函数，都需要在旁边<strong>注释清楚</strong>这个函数的功能。  </p>
<p>&#8195;2. <strong>错误文档</strong>：<br>&#8195;原因：一个工程项目的线程不少，功能模块更多，正常调试很多问题根本发现不了。<br>&#8195;比如通讯过程中串口断开，是因为哪个线程，哪个功能，还是串口松了，还是设备问题。你很难调试的明白。<br>&#8195;方法：<br>&#8195;1. <strong>给各个线程及功能添加特有Tags，catch异常时，将Tags传入写异常函数(将异常字符串写入List&lt;string&gt; StrlistException)。</strong><br>&#8195;2. <strong>各个线程需要调用同一函数写异常，否则程序易爆炸。</strong><br>&#8195;3. <strong>不同线程可用数字标记，这样调试时（写异常函数）可指定线程写异常，方便追踪。</strong><br>&#8195;4. <strong>关于异常：请加上足够多的修饰（例如：当时的输入、时间、相关的全局变量值等等）。</strong><br>&#8195;上述这些内容对于一个完整工程真的很重要！！！切记。   </p>
<h1 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h1><p>&#8195;概述：基本是废话。<br>&#8195;主函数内容相对简单，页面布局也是个人喜好。<br>&#8195;功能：切换页面（如果只用一个界面都不用切；如果要切，百度一下，很简单）。  </p>
<h2 id="8195-副主函数（副窗体）"><a href="#8195-副主函数（副窗体）" class="headerlink" title="&#8195;副主函数（副窗体）"></a>&#8195;副主函数（副窗体）</h2><p>&#8195;<strong>如果你没有副窗体，那这就是你的主窗体！</strong><br>&#8195;在窗体上放上你需要的控件，选择合适的事件，编写代码。  </p>
<h1 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h1><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h2><p>&#8195;物理通信方式（不重要）：<a href="https://baike.baidu.com/item/RS-232" target="_blank" rel="noopener"><strong>RS-232</strong></a>全双工通信。<br>&#8195;通讯协议（Modbus）:RTU模式，自动化领域常用。（下面会简单介绍怎么用）<br>&#8195;<strong>程序通信方式</strong>：收发分开。</p>
<h2 id="通信报文"><a href="#通信报文" class="headerlink" title="通信报文"></a>通信报文</h2><ul>
<li>写入串口（发）：设备地址+功能代码+数据+<a href="https://baike.baidu.com/item/CRC/1453359" target="_blank" rel="noopener">CRC</a>校验<br>&#8195;设备地址：0x00~0xF7(可连接248个设备)，假设接入一个设备（地址01）。<br>&#8195;功能代码：0x01~0xFF。假设：01（读数据）、02（写数据），这个需要通信协议。<br>&#8195;数据：寄存器首地址+寄存器数量。这就相当于数组首地址（2 byte）+读取长度（2 byte）。比如：00 FF + 00 01（从地址为255的寄存器开始读一个寄存器数据）。<br>&#8195;CRC校验：占两个字节（2 byte）。可以自己百度下相关内容。下面是我百度后自己写的一个。将：01 01 00 FF 00 01 传入CRC，算出校验码：CD FA。<br>所以，写入串口：01 01 <strong>00 FF 00 01</strong> CD FA</li>
<li>读取数据（收）：设备地址+功能代码+数据+CRC<br>&#8195;这里唯一不同的就是数据：数据字节数+数据。例如：01 + 01 。<br>&#8195;就是返回了一个字节数据，返回的数据为：0x01，就是返回值为：1 。<br>&#8195;所以返回的报文是：01 01 <strong>01 01</strong> 90 48<br>&#8195;<strong>加粗部分为数据</strong></li>
</ul>
<pre><code>public static byte[] CRC(byte[] source)//CRC校验码计算
      {
          UInt16 res = 0xffff;
          for (int i = 0; i &lt; source.Length; i++)
          {
              res ^= source[i];
              for (int j = 0; j &lt; 8; j++)
              {
                  int a = res &amp; 1;
                  res &gt;&gt;= 1;
                  if (a == 1) res ^= 0xA001;
              }
          }
          byte[] result = new byte[2];
          int m = res &amp; 0xff;
          result[0] = (byte)m;
          m = res &gt;&gt; 8;
          result[1] = (byte)m;
          return result;
      }</code></pre><h2 id="通信实现"><a href="#通信实现" class="headerlink" title="通信实现"></a>通信实现</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><p>&#8195;通信其实一般都不会采用：发送报文–等待接收–接收到–程序继续，这种方式，我也不多说。<br>&#8195;通信的一般方法是：<br><code>public List&lt;string&gt; arrDataToPort = null, arrDataFromPort = null;</code><br>&#8195;发送：创建发送报文线程（DataSend()），不停检查arrDataToPort是否为空，不为空，则lock(arrDataToPort),发出报文，清空arrDataToPort。<br>&#8195;有要发送的报文，就lock(arrDataToPort)，写入报文即可。<br>&#8195;接收：接收自有<strong>接收响应事件</strong>，这里的重点是：将接收到的所有内容放到一个<a href="https://baike.baidu.com/item/StringBuilder" target="_blank" rel="noopener">StringBuilder</a> strData中，然后处理字符串即可。（这个在处理接收数据中再详细讨论）</p>
<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><p>&#8195;？？？</p>
<h1 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h1><p>&#8195;：：：</p>
<h1 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h1><p>&#8195;：：</p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#窗体程序</tag>
        <tag>通讯</tag>
        <tag>数据库</tag>
        <tag>绘图</tag>
      </tags>
  </entry>
  <entry>
    <title>《爱如半夜汽笛》</title>
    <url>/2019/11/14/DistantWhistle/</url>
    <content><![CDATA[<blockquote>
<p>女孩问男孩：“你喜欢我喜欢到什么程度？”</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>少年想了想，用沉静的声音说：“半夜汽笛那个程度。”</p>
</blockquote>
<blockquote>
<p>少女默默地等待下文，里面肯定有什么故事。 </p>
</blockquote>
<blockquote>
<p>“一次，半夜突然醒来，”他开始讲述，“确切时间不清楚，大约两三点吧。也就那个时间，什么时候并不重要。总之是夜深时分，我完完全全孤单一人，身边谁也没有，好吗？请你想象一下，四下漆黑一片，什么也看不见，什么也听不见，就连时钟声都听不见，也可能钟停了。我忽然觉得自己正被隔离开来，远离自己认识的人，远离自己熟悉的场所，远得无法置信。在这广大世界上不为任何人所爱，不为任何人理解，不为任何人记起，我发现自己成了这样的存在。”</p>
</blockquote>
<blockquote>
<p>“即使我就这么消失不见，也没有人察觉，那种心情简直就像被塞进厚铁箱沉入深海底。由于气压的关系，心脏开始痛，痛得像要咔哧咔哧裂成两半，这滋味你可知道。”</p>
</blockquote>
<blockquote>
<p>少女点点头，想必她是知道的。</p>
</blockquote>
<blockquote>
<p>少年继续说道，“这大概是人活着的过程中所能体验到的最难以忍受的一种感觉，又伤心又难过，<br>恨不得直接死掉算了。不，不是这样，不是死掉算了，而是假如放在那里不管，就真的死掉了。因为铁箱里的空气越来越稀薄了，这可不是什么比喻，是真的，这也就是深夜里孤单单醒来的含义，这你也明白？”</p>
</blockquote>
<blockquote>
<p>少女再次默默点头，少年停了一会儿。</p>
</blockquote>
<blockquote>
<p>“不过当时听见很远很远的地方有汽笛声，非常非常遥远，到底什么地方有铁路呢？莫名其妙，总之就那么远，声音若有若无，但我知道那是火车的汽笛声，肯定是！黑暗中我竖耳细听，于是又一次听到了汽笛声。很快，我的心脏不再痛了，时针开始走动，铁箱朝海面慢慢浮升，而这都是因为那微弱的汽笛声的关系。”</p>
</blockquote>
<blockquote>
<p>汽笛声的确微弱，听见没听见都分不清，而我就像爱那汽笛一样爱你。</p>
</blockquote>
<blockquote>
<p><strong><p align="right">——村上春树</p></strong>  </p>
</blockquote>
]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>让人倾心的文字</tag>
      </tags>
  </entry>
  <entry>
    <title>&lt;p align=&quot;left&quot;&gt;要把所有的夜归还给星河，&lt;/p&gt;&lt;p align=&quot;left&quot;&gt;把所有的春光归还给疏疏篱落，&lt;/p&gt;&lt;p align=&quot;left&quot;&gt;把所有的慵慵沉迷与不前，归还给过去的我。&lt;/p&gt;&lt;p align=&quot;left&quot;&gt;明日之我，胸中有丘壑，立马振山河。&lt;p align=&quot;right&quot;&gt;------德卡先生的信箱&lt;/p&gt;</title>
    <url>/2019/11/13/hello-world/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>让人倾心的文字</tag>
      </tags>
  </entry>
</search>
